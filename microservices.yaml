---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-data
data:
  host.app1: app1
  host.redis: redis
  host.app2: app2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
   service: app1
  name: app1
spec:
  replicas: 3
  selector:
    matchLabels:
     service: app1
  strategy: {}
  template:
    metadata:
      labels:
       service: app1
    spec:
      containers:
        - image: juanito/qualentum_app1:0.1.0
          name: app1
          ports:
            - containerPort: 5000
          resources: {}
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-data
                  key: host.redis
        
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
   service: app1
  name: app1
spec:
  type: NodePort
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
      nodePort: 30001
  selector:
   service: app1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
   service: app2
  name: app2
spec:
  replicas: 3
  selector:
    matchLabels:
     service: app2
  strategy: {}
  template:
    metadata:
      labels:
       service: app2
    spec:
      containers:
        - image: juanito/qualentum_app2:0.1.0
          name: app2
          ports:
            - containerPort: 5000
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-data
                  key: host.redis
            - name: APP1_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-data
                  key: host.app1
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
   service: app2
  name: app2
spec:
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
      nodePort: 30002
  selector:
   service: app2
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
   service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
     service: redis
  strategy: {}
  template:
    metadata:
      labels:
       service: redis
    spec:
      containers:
        - image: redis
          name: redis
          ports:
            - containerPort: 6379
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
   service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
   service: redis
